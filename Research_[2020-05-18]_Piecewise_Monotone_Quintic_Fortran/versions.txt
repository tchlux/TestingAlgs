
v0
  All quadratics are recomputed at each step.
  B-splines are evaluated with the simple logic (redundant differences).
  Search shrinks step size, then re-increases step size at half the rate.
  Is monotone check still uses the linear version, needs to be reduced.

v1
  Simplified the computation for monotonicity checks.
  Added test for random monotone data, instead of purely random data.

v2
  Pre-computed "U1 - U0" as "WIDTH" to remove redundant computations.
  Removed "best quadratic" function and put it in line.
  record intervals that need to be checked more efficiently

v3
  Renamed variables according to Dr. Watson's suggestions.
  Added short circuit code to prevent evaluation of B-splines that contain no points.
  Slightly changed the logic for stepping towards monotonicity.

v4
  Changed order of operations in PMQSI.
  Introduced custom ARGSORT3 function for faster sorting of 3 elements.
  Moved computations in monotonicity check to allow slightly more efficient short circuiting.
  
v5
  Removed all the quadratic storage, the "best" is computed on the fly,
  No more "ARGSORT3" function.  

v6
  Changed accuracy to be a smaller number temporarily, but need to fix testing
   code to ensure that points are not generated that are too close together.
  Added the "A*B" computation back to the earlier IS_MONOTONE check for numerical stability.

v7
  Broke up the module into independent subroutines.
  Removed redundant "IF" logic in PMQSI on the number of points.
  Use "SPREAD" on "BIATX" in "FIT_SPLINE" for faster fit.

v8
  Included the source LAPACK code and compiled it with the PMQSI routine.
