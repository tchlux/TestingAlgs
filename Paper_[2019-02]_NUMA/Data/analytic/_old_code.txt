from util.plot import Plot
p = Plot("Oscillatory test problem")
dimension = 1
c = np.random.random(size=(dimension,))
c /= np.sum(c)
c *= 9.0
f = lambda x: oscillatory(x, c=c)
p.add_func("f", f, *([[0,1]]*dimension))
p.plot(show=False)

p = Plot("Oscillatory test problem")
dimension = 2
c = np.random.random(size=(dimension,))
c /= np.sum(c)
c *= 9.0
f = lambda x: oscillatory(x, c=c)
p.add_func("f", f, *([[0,1]]*dimension))
p.show(append=True)
exit()


# A quadratic 2-norm bowl about the origin.
def quadratic(x):
    if len(x.shape) == 1:
        return np.linalg.norm(x)**2
    elif len(x.shape) == 2:
        return np.linalg.norm(x, axis=1)**2
    else:
        class UsageError(Exception): pass
        raise(UsageError("This objective function only supports arrays and matrices."))



