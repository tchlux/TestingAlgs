print("Loading results...")
# results = read_struct()
# print(results.shape)

with open("IEEE_Main_Results.csv", "r") as input_file:
    with open("IEEE_Main_Results_Fixed.csv", "w") as output_file:
        # Skip the header line
        names = input_file.readline().strip().split(",")
        names.insert(6,"Training Percentage")
        print(",".join(names), file=output_file)
        sizes = set()
        count = 0
        for line in input_file:
            line = line.strip().split(",")
            train_size = int(line[6])
            test_size = int(line[7])
            train_perc = round((20*train_size / (train_size + test_size)))*5
            sizes.add(train_perc)
            line.insert(6,str(train_perc))
            print(",".join(line), file=output_file)


CONFIG_DATA_FILE_PKL = "config_data.pkl"


# for i,c in enumerate(configs):
#     counts.append( len(data[data[config_vars] == c]) )

# counts = np.array(counts)


# ====================================================================
# Generate the configs 
config_vars = header[2:6] + [header[7]]
print("Variables:",config_vars)
if (not os.path.exists(CONFIG_DATA_FILE_PKL)):
    configs = np.unique(data[config_vars])
    print("Saving '%s'..."%(CONFIG_DATA_FILE_PKL))
    with open(CONFIG_DATA_FILE_PKL,"wb") as f:
        pickle.dump(configs, f)
else:
    print("Loading '%s'..."%(CONFIG_DATA_FILE_PKL))
    with open(CONFIG_DATA_FILE_PKL,"rb") as f:
        configs = pickle.load(f)
print("Unique confugations:", len(configs))

